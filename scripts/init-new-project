#!/bin/bash

#
# Usage:
#
#   ./bin/init-new-project
#
# We do -not- expect this script to be called from the 'scripts' directory
# of the pantheon-systems/circle-scripts project.  Rather, it is our
# expectation that the user has 'require'd circle-scripts from their
# project's composer.json file.  Thus, `composer install` will have copied
# this script into the project's 'bin' directory.  We will test this
# assumption and fail with an error if the script is being called incorrectly.
#
# See the README.md for more information.
#

# Find the project base directory, where this script was executed from.
SELF_DIRNAME="`dirname -- "$0"`"

# The project base dir is the immediate parent of the 'bin' dir
PROJECT_BASE_DIR="`cd -P -- "$SELF_DIRNAME/.." && pwd -P`"

# The project name is the name of the directory that contains the project
PROJECT_NAME="$(basename "$PROJECT_BASE_DIR")"

# We expect that pantheon-systems/circle-scripts is in the project's
# composer.json file, and that therefore we should be able to find
# the 'examples' directory in VENDOR/pantheon-systems/circle-scripts/examples.
# The 'vendor' directory should be in drupal/sites/all/vendor, but
# we will allow that it might be in the root directory of the project,
# e.g. if the user added pantheon-systems/circle-scripts to an existing
# composer.json file manually, and still wishes to run this init script.
VENDOR_DIR="$PROJECT_BASE_DIR/drupal/sites/all/vendor"
if [ ! -d "$VENDOR_DIR" ]
then
  VENDOR_DIR="$PROJECT_BASE_DIR/vendor"
fi
CIRCLE_SCRIPTS_DIR="$VENDOR_DIR/pantheon-systems/circle-scripts"
EXAMPLES_DIR="$CIRCLE_SCRIPTS_DIR/examples"

# Test to see if this script was called correctly
if [ "$(basename "$SELF_DIRNAME")" != "bin" ] || [ ! -d "$EXAMPLES_DIR" ]
then
  echo "See the README.md for instructions on how to use this script." >&2
  exit 1
fi

# Copy and rename the example files per the instructions in the README.
# Do not overwrite any existing files -- ignore errors
cp -n $EXAMPLES_DIR/example.gitignore $PROJECT_BASE_DIR/.gitignore
cp -n $EXAMPLES_DIR/example.circle.yml $PROJECT_BASE_DIR/circle.yml
cp -n $EXAMPLES_DIR/example.behat.yml $PROJECT_BASE_DIR/behat.yml

# Duplicate the entire 'features' directory with rsync. Ignore existing files.
rsync -rv --ignore-existing $EXAMPLES_DIR/features $PROJECT_BASE_DIR &> /dev/null

# Check to see if this project is using 'web' or 'htdocs' instead of 'drupal',
# and fix up our starting behat.yml if so.
if [ ! -d $PROJECT_BASE_DIR/drupal ]
then
  if [ -d $PROJECT_BASE_DIR/web ]
  then
    REPLACEMENT_ROOT=web
  elif [ -d $PROJECT_BASE_DIR/htdocs ]
  then
    REPLACEMENT_ROOT=htdocs
  fi
  if [ -n "$REPLACEMENT_ROOT" ]
  then
    sed -i '' -e 's#./drupal#./'$REPLACEMENT_ROOT'#g' $PROJECT_BASE_DIR/behat.yml
  fi
fi

# Create a local git repository, if one does not already exist
cd "$PROJECT_BASE_DIR"
if [ ! -d "$PROJECT_BASE_DIR/.git" ]
then
  git init
fi
git add .
git commit -m "Project '$PROJECT_NAME' created via 'init-new-project' script from https://github.com/pantheon-systems/circle-scripts."
echo
echo "Project initialization completed.  Please see the local README.md file for next steps."

